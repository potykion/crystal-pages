@page "{systemUrl}"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Utils

@model IndexModel

@inject IHtmlLocalizer<SharedResources> SharedLocalizer;
@inject IAuthorizationService AuthorizationService
@inject UrlBuilder UrlBuilder

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<div>
    <a href="@UrlBuilder.BuildPropertyLink(
                     Model.GetLanguage(),
                     "Crystal_Mod",
                     "Create",
                     ViewContext.RouteData.Values["systemUrl"] as string)">
        Create New
    </a>

     <div style="float: right">
        Сингония:
        @foreach (var sing in Model.SingTabl)
        {
            <a href="@UrlBuilder.BuildPropertyLink(
                         Model.GetLanguage(),
                         "Crystal_Mod",
                         system: ViewContext.RouteData.Values["systemUrl"] as string,
                         queryParams: $"sing={sing.SingType}")">
                @sing.SingType
            </a>
        }
    </div>
</div>
<table class="table">
    <thead>
    <tr>
            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].SpaceGrp)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].ModfTabl.SuprTemp)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].ModfTabl.SP2)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].ModfTabl.ErrSupr)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].ModfTabl.PointGrp)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ModfTablLanguage[0].ModfTabl.Z)
            </th>


            @if ((await AuthorizationService.AuthorizeAsync(User, "UserOnly")).Succeeded)
            {
            <th>
                @SharedLocalizer["Reference"]
            </th>
            }

         <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.ModfTablLanguage)
    {
    <tr>
            <td>
                @Html.Raw(item.SpaceGrp)
            </td>

            <td>
                    @Html.Raw(item.ModfTabl.SuprTemp)
            </td>
            <td>
                    @Html.Raw(item.ModfTabl.SP2)
            </td>
            <td>
                    @Html.Raw(item.ModfTabl.ErrSupr)
            </td>
            <td>
                    @Html.Raw(item.ModfTabl.PointGrp)
            </td>
            <td>
                    @Html.Raw(item.ModfTabl.Z)
            </td>

        @if ((await AuthorizationService.AuthorizeAsync(User, "UserOnly")).Succeeded)
        {
            <td>
                <a data-toggle="popover" data-placement="right"
                   data-content="@Html.Raw(Model.References[item.ModfTablId])">
                   @Model.References[item.ModfTablId].BibliogrId

                </a>
            </td>

         <td>
            <div>
                <a href="@UrlBuilder.BuildPropertyLink(
                             Model.GetLanguage(),
                             "Crystal_Mod",
                             "Edit",
                             queryParams: $"id={item.Id}"
                             )">
                    Edit
                </a>
                |
                <a href="@UrlBuilder.BuildPropertyLink(
                             Model.GetLanguage(),
                             "Crystal_Mod",
                             "Delete",
                             queryParams: $"id={item.Id}"
                             )">
                    Delete
                </a>
            </div>
         </td>
         }
    </tr>
    }
    </tbody>
</table>

<ul>
    @foreach (var image in Model.Images)
    {
        <li><a href="/ru/Images/@image.NameGraf">@Html.Raw(image.Signatur)</a></li>
    }
</ul>