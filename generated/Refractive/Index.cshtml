@page "{systemUrl}"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization
@using Utils

@model IndexModel

@inject IHtmlLocalizer<SharedResources> SharedLocalizer;
@inject IAuthorizationService AuthorizationService
@inject UrlBuilder UrlBuilder

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<div>
    <a href="@UrlBuilder.BuildPropertyLink(
                     Model.GetLanguage(),
                     "Refractive",
                     "Create",
                     ViewContext.RouteData.Values["systemUrl"] as string)">
        Create New
    </a>

    
     <div style="float: right">
        Сингония:
        @foreach (var sing in Model.SingTabl)
        {
            <a href="@UrlBuilder.BuildPropertyLink(
                         Model.GetLanguage(),
                         "Refractive",
                         system: ViewContext.RouteData.Values["systemUrl"] as string,
                         queryParams: $"sing={sing.SingType}")">
                @sing.SingType
            </a>
        }
    </div>
    
</div>
<table class="table">
    <thead>
    <tr>
        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].MethodIn)
            </th>
        

        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].RefrcInd.Temper)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].RefrcInd.WaveLeng)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].RefrcInd.NazbIndx)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].RefrcInd.ZnachInd)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.RefrcIndLanguage[0].RefrcInd.ErrIndex)
            </th>
        

        
            @if ((await AuthorizationService.AuthorizeAsync(User, "UserOnly")).Succeeded)
            {
            <th>
                @SharedLocalizer["Reference"]
            </th>
            }
        

         <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.RefrcIndLanguage)
    {
    <tr>
        
            <td>
                
                    @Html.DisplayFor(modelItem => item.MethodIn)
                
            </td>
        

        
            <td>
                
                    @Html.DisplayFor(modelItem => item.RefrcInd.Temper)
                
            </td>
        
            <td>
                
                    @Html.DisplayFor(modelItem => item.RefrcInd.WaveLeng)
                
            </td>
        
            <td>
                
                    @Html.DisplayFor(modelItem => item.RefrcInd.NazbIndx)
                
            </td>
        
            <td>
                
                    @Html.DisplayFor(modelItem => item.RefrcInd.ZnachInd)
                
            </td>
        
            <td>
                
                    @Html.DisplayFor(modelItem => item.RefrcInd.ErrIndex)
                
            </td>
        

        
            @if ((await AuthorizationService.AuthorizeAsync(User, "UserOnly")).Succeeded)
            {
            <td>
                <a data-toggle="popover" data-placement="right"
                   data-content="@Html.Raw(Model.References[item.RefrcIndId])">
                    @Model.References[item.RefrcIndId].BibliogrId
                </a>
            </td>
            }
        

         <td>
                <div>
                    <a href="@UrlBuilder.BuildPropertyLink(
                                 Model.GetLanguage(),
                                 "Refractive",
                                 "Edit",
                                 queryParams: $"id={item.Id}"
                                 )">
                        Edit
                    </a>
                    |
                    <a href="@UrlBuilder.BuildPropertyLink(
                                 Model.GetLanguage(),
                                 "Refractive",
                                 "Delete",
                                 queryParams: $"id={item.Id}"
                                 )">
                        Delete
                    </a>
                </div>
            </td>
    </tr>
    }
    </tbody>
</table>